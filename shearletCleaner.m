function cleaningSystem = shearletCleaner_V2(im, varargin)
% shearletCleaner: Generate necessary parameters for orientationCleaner
%
% Usage:
%
% cleanerParameters = shearletCleaner(im)
% cleanerParameters = shearletCleaner(im,'thresholdFunction', function handle)
% cleanerParameters = shearletCleaner(im,'thresholdFunction', function handle,'CoShREM parameter', value for CoShREM parameter)
%
%
% Input:
%
%                   im: Image, NxM matrix containing double
%                       values.
%
%    thresholdFunction: Thresholding function. Takes as a input difference
%                       between edge orientation and shearlet orientation.
%
%       CoShREM_params: Specifies the values for CoShREM toolbox parameters
%                       that are used when calculating edges and orientations
%                       for the image. If no value is specified,
%                       shearletCleaner.m will generate one.
%
%                       List of CoShREM parameters:
%                           - waveletEffSupp
%                           - gaussianEffSupp
%                           - scalesPerOctave
%                           - shearLevel
%                           - alpha
%                           - octaves
%                           - minimalContrast
%                           - offset
%                       Explanation of these parameters can be found in
%                       CoShREM_Parameter_Guide.pdf located in CoShREM v11
%                       folder
% Output:
%
%       cleaningSystem: Structured array that contains the following fields:
%                           - edges:                Edges of the im input parameter,
%                                                   calculated by CoShREM v11 toolbox
%
%                           - Orientations:         Orientations of the edges.
%                                                   Contains the angles of the edge tangents given in
%                                                   degrees between [0 180].
%                                                   Calculated by CoShREM v11 toolbox
%
%                           - thresholdFunction:    Thresholding function
%                                                   specified in the function input or the default
%                                                   generated by this function.


% % Default values for coShREM and thresholdFunction
% Parameters for coShREM
rows = size(im,1);
cols = size(im,2);
waveletEffSupp = 52;
gaussianEffSupp = 15;
scalesPerOctave = 2;
shearLevel = 3; %i.e. 2^shearLevel different orientations on each scale
alpha = 0.5;
octaves = 3.5;

% edge detection parameters
minimalContrast = 4;
offset = 1; %in octaves

% Create the default thresholding function
exponent = 4;
constant = 0.25;
boundaryAngle = 1/4*pi; % Angle differences that are withing this bound of 1/2*pi radians will be cut
thresholdFunction = @(x) (constant*(x-1/2*pi).^exponent) .* (abs(x - 1/2*pi)>boundaryAngle);

% If the user specifies parameters then some of the default ones will be overwriten
if ~isempty(varargin)
    for arg = 1:length(varargin)
        if strcmpi(varargin{arg},'thresholdFunction')
            thresholdFunction = varargin{arg+1};
        end
        if strcmpi(varargin{arg},'waveletEffSupp')
            waveletEffSupp = varargin{arg+1};
        end
        if strcmpi(varargin{arg},'gaussianEffSupp')
            gaussianEffSupp = varargin{arg+1};
        end
        if strcmpi(varargin{arg},'scalesPerOctave')
            scalesPerOctave = varargin{arg+1};
        end
        if strcmpi(varargin{arg},'shearLevel')
            shearLevel = varargin{arg+1};
        end
        if strcmpi(varargin{arg},'alpha')
            alpha = varargin{arg+1};
        end
        if strcmpi(varargin{arg},'minimalContrast')
            minimalContrast = varargin{arg+1};
        end
        if strcmpi(varargin{arg},'offset')
            offset = varargin{arg+1};
        end
    end
end


% Construct the shearlet system using coShrem
disp('Creating complex shearlet system with coShREM...')
tic
complexShearletSystem = CSHRMgetContEdgeSystem(rows,cols,waveletEffSupp,gaussianEffSupp,scalesPerOctave,shearLevel,alpha,1:floor(octaves*scalesPerOctave));
disp(['Done in ' num2str(toc) ' seconds'])
disp('----')

% CSHRMgetEdges doesn't work properly if there isn't enough variation
% between pixel values.
im = im./max(im(:)).*255;

% Use coShREM to calculate the edges and orientations
disp('Calculating edges/orientations...'); tic
[edges,orientations] = CSHRMgetEdges(im,complexShearletSystem,minimalContrast,offset);
disp(['Done in ' num2str(toc) ' seconds'])

% Finally we story the values in struct form to be later used as a
% paremeters when cleaning shearlet coefficients
cleaningSystem.edges = edges;
cleaningSystem.orientations = orientations;
cleaningSystem.thresholdFunction = thresholdFunction;
end

